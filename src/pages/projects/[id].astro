---
import type { GetStaticPaths } from 'astro'
import { getCollection, render } from 'astro:content'

import ProjectLayout from '@/layouts/ProjectLayout'
import client from '@/lib/client'

export const getStaticPaths = (async () => {
  const projectEntries = await getCollection('projects')
  return projectEntries.map((entry) => ({
    params: { id: entry.id },
    props: { entry }
  }))
}) satisfies GetStaticPaths

const { entry } = Astro.props
const { Content, headings } = await render(entry)

const response = await client.api.github['last-updated-file']
  .$get({ query: { path: `projects/${entry.id}.mdx` } })

const data = response.ok ? await response.json() : null
const latestCommitUrl = data?.latestCommitUrl ?? ''
const lastUpdatedTime = data?.lastUpdatedTime ?? new Date().toISOString()

---

<ProjectLayout
  {...entry.data}
  slug={entry.id}
  headings={headings}
  updatedDate={new Date(lastUpdatedTime)}
  latestCommitUrl={latestCommitUrl}
>
  <Content />
</ProjectLayout>