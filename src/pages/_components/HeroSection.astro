---
import Keyboard from '../_components/Keyboard.astro'
import TweetCard from '@/components/TweetCard/TweetCard.astro'
import { MorphingText } from "@/components/ui/morphing-text"

const texts = [
  "Coding a New Project",
  "Studying for the GMAT", 
  "Writing MBA Essays",
  "Programming an Algo",
  "Staring At My Pi Cluster",
  "Reasoning Quantitatively", 
  "Developing a Web App",
  "Statistically Arbitraging",
]
---

<section class='flex h-screen flex-col gap-8 pb-32 pt-24 sm:justify-center'>
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
    <div class="space-y-8">
      <div
        class:list={[
          'flex w-fit items-center rounded-full',
          'gap-3 py-1.5 pl-3 pr-4',
          'border border-zinc-300',
          'bg-zinc-100',
          'enter-animation'
        ]}
      >
        <div class='relative size-3'>
          <div
            class='absolute size-full animate-ping rounded-full bg-red-300 opacity-65'
          >
          </div>
          <div class='drop-shadow-green size-full rounded-full bg-red-400'></div>
        </div>
        <h3 class='text-sm text-zinc-900 max-xs:text-xs'>
          Studying for the GMAT
        </h3>
      </div>
      <h1
        class='enter-animation text-[clamp(2rem,7vw,3rem)] font-medium leading-[1.05] tracking-tight text-zinc-900'
      >
        Currently Locked In<br/>
        <MorphingText client:load texts={texts} className="text-left" />
      </h1>
      <h2
        class='enter-animation mb-8 max-w-xl leading-relaxed text-zinc-600 max-sm:text-sm'
      >
        I work on projects that provide value, utility, or disrupt common pain-points. It's innate for humans to deviate from uncomfort. We need products to do so.
      </h2>
      <Keyboard class='enter-animation' />
    </div>

    <div class="hidden lg:block">
      <TweetCard
        tweetId="1880265972050981005"
        class="w-full max-w-lg mx-auto transform hover:scale-[1.02] transition-transform duration-200"
      />
    </div>
  </div>
</section>

<style is:global>
  .drop-shadow-red {
    filter: drop-shadow(0px 0px 8px #59ff7e);
  }

  .enter-animation {
    opacity: 0.025;
    animation: fade-in-bottom 0.45s cubic-bezier(0.39, 0.575, 0.565, 1) forwards;
  }

  .enter-animation:nth-child(2) {
    animation-delay: 0.2s;
  }

  .enter-animation:nth-child(3) {
    animation-delay: 0.4s;
  }

  .enter-animation:nth-child(4) {
    animation-delay: 0.6s;
  }
</style>
